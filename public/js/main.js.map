{"version":3,"sources":["file:///C:/Users/macko/Desktop/omatkoword/omatko/themes/2025/assets/js/main.js"],"sourcesContent":["/**\r\n * Calculates time diffrence in day, hour, minute, second\r\n * @param {number} distance distance in number\r\n * @return {Array\u003cstring\u003e} array of padded day, hour, minute, second\r\n */\r\nwindow.timeDiffText = (distance) =\u003e {\r\n  const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor(\r\n    (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\r\n  );\r\n  const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n  const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n  return [\r\n    days.toString().padStart(2, \"0\"),\r\n    hours.toString().padStart(2, \"0\"),\r\n    minutes.toString().padStart(2, \"0\"),\r\n    seconds.toString().padStart(2, \"0\"),\r\n  ];\r\n};\r\n\r\nwindow.countdownToDate = (\r\n  targetDate,\r\n  elementId,\r\n  postTimerText = \"\",\r\n  interval = null,\r\n) =\u003e {\r\n  const timer = document.getElementById(elementId);\r\n\r\n  if (!timer) {\r\n    console.error(`Timer element ${elementId} not found`);\r\n    return;\r\n  }\r\n\r\n  function updateTimer() {\r\n    const now = new Date();\r\n    const distance = targetDate - now;\r\n    if (distance \u003c 0) {\r\n      clearInterval(interval);\r\n      timer.innerHTML = `\u003cdiv class='countdown-end'\u003e${postTimerText}\u003c/div\u003e`;\r\n      return;\r\n    }\r\n\r\n    const formattedValues = timeDiffText(distance);\r\n\r\n    timer.querySelectorAll(\".countdown-number\").forEach((ele, i) =\u003e {\r\n      ele.textContent = formattedValues[i];\r\n    });\r\n  }\r\n  updateTimer();\r\n  interval = setInterval(updateTimer, 1000);\r\n};\r\n"],"mappings":";;AAKA,SAAO,eAAe,CAAC,aAAa;AAClC,UAAM,OAAO,KAAK,MAAM,YAAY,MAAO,KAAK,KAAK,GAAG;AACxD,UAAM,QAAQ,KAAK;AAAA,MAChB,YAAY,MAAO,KAAK,KAAK,OAAQ,MAAO,KAAK;AAAA,IACpD;AACA,UAAM,UAAU,KAAK,MAAO,YAAY,MAAO,KAAK,OAAQ,MAAO,GAAG;AACtE,UAAM,UAAU,KAAK,MAAO,YAAY,MAAO,MAAO,GAAI;AAE1D,WAAO;AAAA,MACL,KAAK,SAAS,EAAE,SAAS,GAAG,GAAG;AAAA,MAC/B,MAAM,SAAS,EAAE,SAAS,GAAG,GAAG;AAAA,MAChC,QAAQ,SAAS,EAAE,SAAS,GAAG,GAAG;AAAA,MAClC,QAAQ,SAAS,EAAE,SAAS,GAAG,GAAG;AAAA,IACpC;AAAA,EACF;AAEA,SAAO,kBAAkB,CACvB,YACA,WACA,gBAAgB,IAChB,WAAW,SACR;AACH,UAAM,QAAQ,SAAS,eAAe,SAAS;AAE/C,QAAI,CAAC,OAAO;AACV,cAAQ,MAAM,iBAAiB,SAAS,YAAY;AACpD;AAAA,IACF;AAEA,aAAS,cAAc;AACrB,YAAM,MAAM,oBAAI,KAAK;AACrB,YAAM,WAAW,aAAa;AAC9B,UAAI,WAAW,GAAG;AAChB,sBAAc,QAAQ;AACtB,cAAM,YAAY,8BAA8B,aAAa;AAC7D;AAAA,MACF;AAEA,YAAM,kBAAkB,aAAa,QAAQ;AAE7C,YAAM,iBAAiB,mBAAmB,EAAE,QAAQ,CAAC,KAAK,MAAM;AAC9D,YAAI,cAAc,gBAAgB,CAAC;AAAA,MACrC,CAAC;AAAA,IACH;AACA,gBAAY;AACZ,eAAW,YAAY,aAAa,GAAI;AAAA,EAC1C;","names":[]}